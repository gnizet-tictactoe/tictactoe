.grid-wrapper {
    position: relative;
    width: var(--grid-size);
    height: var(--grid-size);
}

.grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /* Assuming 3x3 grid */
    grid-template-rows: repeat(3, 1fr);
    width: 100%;
    height: 100%;
}

.bar {
    position: absolute;
    background-color: var(--accent-color);
    border-radius: calc(var(--grid-size) * 0.04);
    transition: background-color 0.3s ease;
}

.bar.vertical {
    top: 0;
    bottom: 0;
    width: calc(var(--grid-size) * 0.03);
    transform-origin: center;
    animation: grow-vertical 0.5s ease-out forwards;
}

@keyframes grow-vertical {
    from {
        transform: scaleY(0);
    }

    to {
        transform: scaleY(1);
    }
}

.bar.horizontal {
    left: 0;
    right: 0;
    height: calc(var(--grid-size) * 0.03);
    transform-origin: center;
    animation: grow-horizontal 0.5s ease-out forwards;
}

@keyframes grow-horizontal {
    from {
        transform: scaleX(0);
    }

    to {
        transform: scaleX(1);
    }
}

.bar.victory {
    background-color: #27ae60;
}

.bar.victory.vertical {
    top: 5%;
    bottom: 0px;
    width: calc(var(--grid-size) * 0.03);
    transform-origin: top;
    transform: scaleY(0);
    animation: grow-victory-vertical 0.4s ease-in forwards;
    animation-delay: 0.5s;
}

@keyframes grow-victory-vertical {
    from {
        transform: scaleY(0);
    }

    to {
        transform: scaleY(0.95);
    }
}

.bar.victory.horizontal {
    left: 5%;
    right: 0px;
    height: calc(var(--grid-size) * 0.03);
    transform-origin: left;
    transform: scaleX(0);
    animation: grow-victory-horizontal 0.4s ease-in forwards;
    animation-delay: 0.5s;
}

@keyframes grow-victory-horizontal {
    from {
        transform: scaleX(0);
    }

    to {
        transform: scaleX(0.95);
    }
}

.bar.victory.diagonal.main {
    left: 5%;
    top: 5%;
    right: 0px;
    bottom: 0px;
    height: calc(var(--grid-size) * 0.03);
    transform-origin: left;
    transform: scaleX(0);
    animation: grow-victory-diagonal-main 0.4s ease-in forwards;
    animation-delay: 0.5s;
}

@keyframes grow-victory-diagonal-main {
    from {
        transform: rotate(45deg) scaleX(0);
    }

    to {
        transform: rotate(45deg) scaleX(1.34);
        /* 1.34 is equal to 95% * sqrt(2)
        and sqrt(2) is used because it's the diagonal length of the square grid
         */
    }
}

.bar.victory.diagonal.anti {
    left: 5%;
    top: 95%;
    right: 0px;
    bottom: 0px;
    height: calc(var(--grid-size) * 0.03);
    transform-origin: left;
    transform: scaleX(0);
    animation: grow-victory-diagonal-anti 0.4s ease-in forwards;
    animation-delay: 0.5s;
}

@keyframes grow-victory-diagonal-anti {
    from {
        transform: rotate(-45deg) scaleX(0);
    }

    to {
        transform: rotate(-45deg) scaleX(1.34);
    }
}